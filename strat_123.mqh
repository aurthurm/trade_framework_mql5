//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
#include "util_context.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
class CStrat123 : public CUtilContext
  {
protected:
   double            m_volume;
public:
                     CStrat123(void);
                    ~CStrat123(void);

   bool              Init(string symbol, ENUM_TIMEFRAMES period, ulong magic, double volume);

   bool              BuySignal(void);
   bool              SellSignal(void);

   void              Exec(void);
  };
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void CStrat123::CStrat123(void)
  {
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void CStrat123::~CStrat123(void)
  {
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool CStrat123::Init(string symbol, ENUM_TIMEFRAMES period, ulong magic, double volume)
  {
   m_volume = volume;
   return(CUtilContext::Init(symbol, period, magic));
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool CStrat123::BuySignal(void)
  {
   return(Low(3) > Low(2) && Low(2) < Low(1));
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool CStrat123::SellSignal(void)
  {
   return(High(3) < High(2) && High(2) > High(1));
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void CStrat123::Exec(void)
  {
   if(!IsNewBar())
      return;
   if(!Refresh())
      return;

   if(Position() != STATE_NONE)
      return;

   if(BuySignal())
     {
      Buy(m_volume, Low(2), Ask() + MathAbs(Ask() - Low(2)));
     }

   if(SellSignal())
     {
      Sell(m_volume, High(2), MathMax(Ask() - MathAbs(Ask() - High(2)), 0.0));
     }
  }
//+------------------------------------------------------------------+
